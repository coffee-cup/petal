---
source: petal_core/src/parser.rs
expression: "parse_stmt(\"fn foo(a: Int, b: String) {}\")"
---
(
    [
        Identifier {
            name: "foo",
            span: Span {
                start: Pos(
                    3,
                ),
                end: Some(
                    Pos(
                        5,
                    ),
                ),
            },
            symbol_id: None,
        },
        Identifier {
            name: "a",
            span: Span {
                start: Pos(
                    7,
                ),
                end: Some(
                    Pos(
                        7,
                    ),
                ),
            },
            symbol_id: None,
        },
        Identifier {
            name: "b",
            span: Span {
                start: Pos(
                    15,
                ),
                end: Some(
                    Pos(
                        15,
                    ),
                ),
            },
            symbol_id: None,
        },
    ],
    [],
    [
        StmtNode {
            stmt: BlockStmt(
                Block {
                    statements: [],
                },
            ),
            span: Span {
                start: Pos(
                    26,
                ),
                end: Some(
                    Pos(
                        27,
                    ),
                ),
            },
        },
    ],
    [
        FuncDecl {
            ident: IdentId(
                1v1,
            ),
            is_exported: false,
            type_params: [],
            args: [
                FuncArg {
                    ident: IdentId(
                        2v1,
                    ),
                    ty: TypeAnnotation {
                        name: "Int",
                        span: Span {
                            start: Pos(
                                10,
                            ),
                            end: Some(
                                Pos(
                                    12,
                                ),
                            ),
                        },
                    },
                    span: Span {
                        start: Pos(
                            7,
                        ),
                        end: Some(
                            Pos(
                                12,
                            ),
                        ),
                    },
                },
                FuncArg {
                    ident: IdentId(
                        3v1,
                    ),
                    ty: TypeAnnotation {
                        name: "String",
                        span: Span {
                            start: Pos(
                                18,
                            ),
                            end: Some(
                                Pos(
                                    23,
                                ),
                            ),
                        },
                    },
                    span: Span {
                        start: Pos(
                            15,
                        ),
                        end: Some(
                            Pos(
                                23,
                            ),
                        ),
                    },
                },
            ],
            return_ty: None,
            body: StmtId(
                1v1,
            ),
            span: Span {
                start: Pos(
                    0,
                ),
                end: Some(
                    Pos(
                        27,
                    ),
                ),
            },
        },
    ],
)
